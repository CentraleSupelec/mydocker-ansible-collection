- name: Check if centralesupelec/mydockervolume plugin already installed
  ansible.builtin.command: "docker plugin inspect centralesupelec/mydockervolume -f '{{ '{{' }}.PluginReference{{ '}}' }}'"
  register: plugin_inspect
  changed_when: false
  ignore_errors: true

- name: Define if should upgrade plugin
  changed_when: false
  set_fact:
    docker_swarm_volume_upgrade_internal: true
  when: (plugin_inspect.rc == 0) and (docker_swarm_volume_plugin != (plugin_inspect.stdout|replace("docker.io/", ""))) and docker_swarm_volume_upgrade

- name: Remove old plugin
  ansible.builtin.command: docker plugin rm -f centralesupelec/mydockervolume
  when: docker_swarm_volume_upgrade_internal

- name: Install docker centralesupelec/mydockervolume plugin
  ansible.builtin.command: >-
    docker plugin install {{ docker_swarm_volume_plugin }}
    --alias=centralesupelec/mydockervolume
    LOG_LEVEL=warning DRIVER_MODE=RBD
    RBD_CONF_POOL=mydocker-{{ env }} RBD_CONF_CLUSTER=ceph RBD_CONF_KEYRING_USER=client.{{ ceph_user }}
    --grant-all-permissions
  when: '("not found" in plugin_inspect.stderr) or docker_swarm_volume_upgrade_internal'
  register: output
  changed_when: '"Installed plugin" in output.stdout'

- name: Get docker centralesupelec/mydockervolume plugin env configuration
  ansible.builtin.command: docker plugin inspect -f {{ '{{.Settings.Env}}' }} centralesupelec/mydockervolume
  changed_when: false
  register: rbd_env_list

- name: Disable centralesupelec/mydockervolume plugin to update conf
  ansible.builtin.command: docker plugin disable centralesupelec/mydockervolume -f
  when: ceph_user not in rbd_env_list.stdout
  register: output
  changed_when: output.rc == 0

- name: Update RBD_CONF_KEYRING_USER of centralesupelec/mydockervolume plugin
  ansible.builtin.command: docker plugin set centralesupelec/mydockervolume RBD_CONF_KEYRING_USER=client.{{ ceph_user }}
  when: ceph_user not in rbd_env_list.stdout
  register: output
  changed_when: output.rc == 0

- name: Update RBD_CONF_POOL of centralesupelec/mydockervolume plugin
  ansible.builtin.command: "docker plugin set centralesupelec/mydockervolume RBD_CONF_POOL=mydocker-{{ env }}"
  when: ceph_user not in rbd_env_list.stdout
  register: output
  changed_when: output.rc == 0

- name: Enable centralesupelec/mydockervolume plugin
  ansible.builtin.command: docker plugin enable centralesupelec/mydockervolume
  when: ceph_user not in rbd_env_list.stdout
  register: output
  changed_when: output.rc == 0

- name: List installed plugins
  ansible.builtin.command: docker plugin list
  register: plugin_list
  changed_when: false

- name: Install docker cephfs plugin
  ansible.builtin.command: >-
    docker plugin install brindster/docker-plugin-cephfs
    --alias cephfs
    CLUSTER_NAME=ceph CLIENT_NAME={{ ceph_user }} SERVERS={{ ceph_ips | join(',') }}
    --grant-all-permissions
  register: output
  when: '"cephfs" not in plugin_list.stdout'
  changed_when: '"Installed plugin" in output.stdout'

- name: Get docker cephfs plugin env configuration
  ansible.builtin.command: docker plugin inspect -f {{ '{{.Settings.Env}}' }} cephfs
  changed_when: false
  register: cephfs_env_list

- name: Disable cepfs plugin to update conf
  ansible.builtin.command: docker plugin disable cephfs -f
  when: ceph_user not in cephfs_env_list.stdout
  register: output
  changed_when: output.rc == 0

- name: Update CLIENT_NAME of cephfs plugin
  ansible.builtin.command: "docker plugin set cephfs CLIENT_NAME={{ ceph_user }}"
  when: ceph_user not in cephfs_env_list.stdout
  register: output
  changed_when: output.rc == 0

- name: Enable cepfs plugin
  ansible.builtin.command: docker plugin enable cephfs
  when: ceph_user not in cephfs_env_list.stdout
  register: output
  changed_when: output.rc == 0
